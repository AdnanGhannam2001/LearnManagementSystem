syntax = "proto3";

package learnio.auth;

import "_shared.proto";

service AuthService {
    rpc Register(RegisterRequest) returns (RegisterResponse);

    rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse);

    rpc Login(LoginRequest) returns (LoginResponse);

    rpc ChangePassword(ChangePasswordRequest) returns (EmptyOrError);

    rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse);

    rpc RoleAuthorize(RoleAuthorizeRequest) returns (AuthorizeResponse);

    rpc ClaimsAuthorize(ClaimsAuthorizeRequest) returns (AuthorizeResponse);
}

enum Action {
    CREATE = 0;
    READ = 1;
    UPDATE = 2;
    DELETE = 3;
}

enum ObjectType {
    USER = 0;
    NOTIFICATION = 1;
    SETTINGS = 2;
    APPLY_REQUEST = 3;
    COURSE = 4;
    UNIT = 5;
    LESSON = 6;
    FOLDER = 7;
    FILE = 8;
    QUIZ_QUESTION = 9;
    CHOISE = 10;
    COMMENT = 11;
    VOTE = 12;
    CHAT = 13;
    MESSAGE = 14;
    RESOURCE = 15;
    CART = 16;
    ROLLED = 17;
    PAYMENT = 18;
    MEMBER = 19;
    DONE = 20;
    RATE = 21;
    QUESTION = 22;
    ANNOUNCEMENT = 23;
}

message User {
    string id = 1;
    string name = 2;
    string email = 3;
    string permission = 4;
    bool isActivated = 5;
}

message RegisterRequest {
    string name = 1;
    string email = 2;
    string password = 3;
}

message RegisterResponse {
    oneof data {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        string email = 1;
        string activateCode = 2;
    }
}

message VerifyEmailRequest {
    string email = 1;
    string code = 2;
}

message VerifyEmailResponse {
    optional Error error = 1;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    oneof data {
        string token = 1;
        Error error = 2;
    }
}

message ChangePasswordRequest {
    string id = 1;
    string new_password = 2;

    oneof data {
        string password = 3;
        string reset_code = 4;
    }
}

message AuthenticateRequest {
    string token = 1;
}

message AuthenticateResponse {
    oneof data {
        User user = 1;
        Error error = 2;
    }
}

message RoleAuthorizeRequest {
    User user = 1;
    repeated string required_permissions = 2;
}

message ClaimsAuthorizeRequest {
    User user = 1;
    string object_id = 2;
    ObjectType object_type = 3;
    Action action = 4;
}

message AuthorizeResponse {
    oneof data {
        bool allowed = 1;
        Error error = 2;
    }
}
